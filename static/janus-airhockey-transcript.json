[
  {
    "role": "User",
    "content": "Let's create a new site using the janusweb framework. Use Janus' JML markup in an HTML page to define a new room. We'll start off with this basic markup:\n\n<html>\n<body>\n<script src=\"https://web.janusxr.org/1.5.53/janusweb.js\"></script>\n<janus-viewer>\n<assets>\n</assets>\n<room>\n</room>\n</janus-viewer>\n</body>\n</html>\n\nWe'll define some custom elements, for the <airhockey-table>, <airhockey-paddle>, <airhockey-puck>, and <airhockey-scoreboard>. We'll also need an <airhockey-goal> object to represent each player's goal. The airhockey-table will have a goal at each end, and the scoreboard will reflect any time the puck collides with the respective player's goal.\n\nCustom elements are defined with this syntax:\n\njanus.registerElement('airhockey-table', {\n  someattribute: \"default string value\",\n  numericattribute: 1.2,\n  booleanattribute: true,\n\n  create() {\n    // create any child objects with this.createObject('object', { id: 'primitivename', pos: \"x y z\", scale: \"xscale yscale zscale\", col: \"colorname or #hexcode\" })\n  },\n  update(dt) {\n    // called once per frame\n  }\n});"
  },
  {
    "role": "Assistant",
    "content": "```html\n<html>\n<body>\n<script src=\"https://web.janusxr.org/1.5.53/janusweb.js\"></script>\n<janus-viewer>\n    <assets>\n        <!-- Define any assets here -->\n    </assets>\n    <room>\n        <airhockey-table position=\"0 0 0\"></airhockey-table>\n        <airhockey-scoreboard id=\"scoreboard1\" position=\"-5 5 0\"></airhockey-scoreboard>\n        <airhockey-scoreboard id=\"scoreboard2\" position=\"5 5 0\"></airhockey-scoreboard>\n    </room>\n</janus-viewer>\n<script>\njanus.registerElement('airhockey-table', {\n    someattribute: \"default string value\",\n    numericattribute: 1.2,\n    booleanattribute: true,\n\n    create() {\n        this.createObject('box', { id: 'table', pos: \"0 0 0\", scale: \"10 1 5\", col: \"#00FF00\" });\n        this.createObject('airhockey-goal', { id: 'goal1', pos: \"-5 0 0\", scale: \"1 2 0.5\", col: \"#FF0000\", player: 1 });\n        this.createObject('airhockey-goal', { id: 'goal2', pos: \"5 0 0\", scale: \"1 2 0.5\", col: \"#0000FF\", player: 2 });\n        this.createObject('airhockey-puck', { id: 'puck', pos: \"0 1 0\", scale: \"0.2 0.2 0.2\", col: \"#FFFFFF\" });\n        this.createObject('airhockey-paddle', { id: 'paddle1', pos: \"-2 1 2\", scale: \"0.5 0.5 0.5\", col: \"#FFFF00\", player: 1 });\n        this.createObject('airhockey-paddle', { id: 'paddle2', pos: \"2 1 2\", scale: \"0.5 0.5 0.5\", col: \"#FFA500\", player: 2 });\n    },\n    update(dt) {\n        // Table update logic\n    }\n});\n\njanus.registerElement('airhockey-paddle', {\n    someattribute: \"default string value\",\n    numericattribute: 1.0,\n    booleanattribute: true,\n\n    create() {\n        this.createObject('sphere', { id: 'paddle-sphere', pos: \"0 0 0\", scale: \"0.5 0.5 0.5\", col: this.col });\n    },\n    update(dt) {\n        // Paddle movement logic\n    }\n});\n\njanus.registerElement('airhockey-puck', {\n    someattribute: \"default string value\",\n    numericattribute: 1.0,\n    booleanattribute: true,\n\n    create() {\n        this.createObject('sphere', { id: 'puck-sphere', pos: \"0 0 0\", scale: \"0.2 0.2 0.2\", col: this.col });\n    },\n    update(dt) {\n        // Puck movement and collision logic\n    }\n});\n\njanus.registerElement('airhockey-scoreboard', {\n    someattribute: \"default string value\",\n    numericattribute: 1.0,\n    booleanattribute: true,\n\n    create() {\n        this.createObject('text', { id: 'score-text', pos: \"0 0 0\", scale: \"1 1 1\", col: \"#FFFFFF\", text: \"0 - 0\" });\n    },\n    update(dt) {\n        // Scoreboard update logic\n    }\n});\n\njanus.registerElement('airhockey-goal', {\n    someattribute: \"default string value\",\n    numericattribute: 1.0,\n    booleanattribute: true,\n\n    create() {\n        this.createObject('box', { id: 'goal-box', pos: \"0 0 0\", scale: \"1 2 0.1\", col: this.col });\n    },\n    update(dt) {\n        // Goal collision detection logic\n    }\n});\n</script>\n</body>\n</html>\n```"
  },
  {
    "role": "User",
    "content": "Move our custom element definitions inside of a function called defineCustomElements(), and call this from <room onload=\"defineCustomElements()\">"
  },
  {
    "role": "Assistant",
    "content": "```html\n<html>\n<body>\n<script src=\"https://web.janusxr.org/1.5.53/janusweb.js\"></script>\n<janus-viewer>\n    <assets>\n        <!-- Define any assets here -->\n    </assets>\n    <room onload=\"defineCustomElements()\">\n        <airhockey-table position=\"0 0 0\"></airhockey-table>\n        <airhockey-scoreboard id=\"scoreboard1\" position=\"-5 5 0\"></airhockey-scoreboard>\n        <airhockey-scoreboard id=\"scoreboard2\" position=\"5 5 0\"></airhockey-scoreboard>\n    </room>\n</janus-viewer>\n<script>\nfunction defineCustomElements() {\n    janus.registerElement('airhockey-table', {\n        someattribute: \"default string value\",\n        numericattribute: 1.2,\n        booleanattribute: true,\n    \n        create() {\n            this.createObject('box', { id: 'table', pos: \"0 0 0\", scale: \"10 1 5\", col: \"#00FF00\" });\n            this.createObject('airhockey-goal', { id: 'goal1', pos: \"-5 0 0\", scale: \"1 2 0.5\", col: \"#FF0000\", player: 1 });\n            this.createObject('airhockey-goal', { id: 'goal2', pos: \"5 0 0\", scale: \"1 2 0.5\", col: \"#0000FF\", player: 2 });\n            this.createObject('airhockey-puck', { id: 'puck', pos: \"0 1 0\", scale: \"0.2 0.2 0.2\", col: \"#FFFFFF\" });\n            this.createObject('airhockey-paddle', { id: 'paddle1', pos: \"-2 1 2\", scale: \"0.5 0.5 0.5\", col: \"#FFFF00\", player: 1 });\n            this.createObject('airhockey-paddle', { id: 'paddle2', pos: \"2 1 2\", scale: \"0.5 0.5 0.5\", col: \"#FFA500\", player: 2 });\n        },\n        update(dt) {\n            // Table update logic\n        }\n    });\n    \n    janus.registerElement('airhockey-paddle', {\n        someattribute: \"default string value\",\n        numericattribute: 1.0,\n        booleanattribute: true,\n    \n        create() {\n            this.createObject('sphere', { id: 'paddle-sphere', pos: \"0 0 0\", scale: \"0.5 0.5 0.5\", col: this.col });\n        },\n        update(dt) {\n            // Paddle movement logic\n        }\n    });\n    \n    janus.registerElement('airhockey-puck', {\n        someattribute: \"default string value\",\n        numericattribute: 1.0,\n        booleanattribute: true,\n    \n        create() {\n            this.createObject('sphere', { id: 'puck-sphere', pos: \"0 0 0\", scale: \"0.2 0.2 0.2\", col: this.col });\n        },\n        update(dt) {\n            // Puck movement and collision logic\n        }\n    });\n    \n    janus.registerElement('airhockey-scoreboard', {\n        someattribute: \"default string value\",\n        numericattribute: 1.0,\n        booleanattribute: true,\n    \n        create() {\n            this.createObject('text', { id: 'score-text', pos: \"0 0 0\", scale: \"1 1 1\", col: \"#FFFFFF\", text: \"0 - 0\" });\n        },\n        update(dt) {\n            // Scoreboard update logic\n        }\n    });\n    \n    janus.registerElement('airhockey-goal', {\n        someattribute: \"default string value\",\n        numericattribute: 1.0,\n        booleanattribute: true,\n    \n        create() {\n            this.createObject('box', { id: 'goal-box', pos: \"0 0 0\", scale: \"1 2 0.1\", col: this.col });\n        },\n        update(dt) {\n            // Goal collision detection logic\n        }\n    });\n}\n</script>\n</body>\n</html>\n```\nCommit Summary: Encapsulated custom element definitions within a `defineCustomElements()` function and added `onload=\"defineCustomElements()\"` to the `<room>` element to initialize them on room load."
  }
]